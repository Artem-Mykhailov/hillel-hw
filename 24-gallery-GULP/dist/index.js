class GalleryApi{static URL="https://jsonplaceholder.typicode.com";static request(e="",t="GET",r){return fetch(""+GalleryApi.URL+e,{method:t,headers:{"Content-type":"application/json; charset=UTF-8"},body:r?JSON.stringify(r):void 0}).then(e=>e.json())}static getAlbums(){return this.request("/albums")}static getPhotos(e){return this.request("/photos?albumId="+e)}}const URL_ALBUMS="https://jsonplaceholder.typicode.com/albums",URL_IMAGES="https://jsonplaceholder.typicode.com/photos?albumId=",BTN_CLASS="btn-general",ALBUM_SELECTOR=".album",gallery=document.querySelector(".gallery"),galleryImages=document.querySelector(".gallery-images"),galleryAlbumsList=document.querySelector(".gallery-albums");function onGalleryClick(e){const t=e.target.classList;e=getAlbumId(e.target);t.contains(BTN_CLASS)&&(deleteImages(),getImages(e).then(e=>renderImages(e)).catch(showError))}function getAlbumsList(){return fetch(URL_ALBUMS).then(e=>{if(e.ok)return e.json();throw new Error("Can not retrive albums list")})}function renderAlbumList(e){e=e.map(generateAlbumsHTML).join("");galleryAlbumsList.insertAdjacentHTML("beforeend",e)}function getImages(e){return fetch(URL_IMAGES+e).then(e=>{if(e.ok)return e.json();throw new Error("Can not retrive images from album")})}function renderImages(e){e=e.map(generateImagesHTML).join("");galleryImages.insertAdjacentHTML("beforeend",e)}function deleteImages(){const e=document.querySelectorAll(".images");e.forEach(e=>{e.remove()})}function generateAlbumsHTML(e){return`
    <li 
    class='album'
    data-id="${e.id}"
    >
      <button type='button' class='btn-general'>${e.title}</button>
    </li>
  `}function generateImagesHTML(e){return`
    <div class="images">
    <p class="image-id">${e.id}</p>
    </div>
  `}function getAlbumId(e){return e.closest(ALBUM_SELECTOR).dataset.id}function showDefaultImages(){return fetch(URL_IMAGES+"1").then(e=>{if(e.ok)return e.json();throw new Error("Can not retrive images from album")})}function showError(e){alert(e.message)}gallery.addEventListener("click",onGalleryClick),getAlbumsList().then(e=>renderAlbumList(e)).catch(showError),showDefaultImages().then(e=>renderImages(e)).catch(showError);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhbGxlcnlBUEkuanMiLCJzY3JpcHQuanMiXSwibmFtZXMiOlsiR2FsbGVyeUFwaSIsIlVSTCIsInJlcXVlc3QiLCJ1cmkiLCJtZXRob2QiLCJkYXRhIiwiZmV0Y2giLCJoZWFkZXJzIiwiQ29udGVudC10eXBlIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1bmRlZmluZWQiLCJ0aGVuIiwicmVzIiwianNvbiIsImdldEFsYnVtcyIsInRoaXMiLCJnZXRQaG90b3MiLCJhbGJ1bUlkIiwiVVJMX0FMQlVNUyIsIlVSTF9JTUFHRVMiLCJCVE5fQ0xBU1MiLCJBTEJVTV9TRUxFQ1RPUiIsImdhbGxlcnkiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJnYWxsZXJ5SW1hZ2VzIiwiZ2FsbGVyeUFsYnVtc0xpc3QiLCJvbkdhbGxlcnlDbGljayIsImUiLCJjbGFzc0xpc3QiLCJ0YXJnZXQiLCJpZCIsImdldEFsYnVtSWQiLCJjb250YWlucyIsImRlbGV0ZUltYWdlcyIsImdldEltYWdlcyIsInJlbmRlckltYWdlcyIsImltZyIsImNhdGNoIiwic2hvd0Vycm9yIiwiZ2V0QWxidW1zTGlzdCIsIm9rIiwiRXJyb3IiLCJyZW5kZXJBbGJ1bUxpc3QiLCJhbGJ1bSIsImh0bWwiLCJtYXAiLCJnZW5lcmF0ZUFsYnVtc0hUTUwiLCJqb2luIiwiaW5zZXJ0QWRqYWNlbnRIVE1MIiwiZ2VuZXJhdGVJbWFnZXNIVE1MIiwiaW1hZ2VzIiwicXVlcnlTZWxlY3RvckFsbCIsImZvckVhY2giLCJyZW1vdmUiLCJ0aXRsZSIsImltYWdlIiwiZWwiLCJjbG9zZXN0IiwiZGF0YXNldCIsInNob3dEZWZhdWx0SW1hZ2VzIiwiYWxlcnQiLCJtZXNzYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciJdLCJtYXBwaW5ncyI6Ik1BQUFBLFdBQ0FDLFdBQUEsdUNBRUFDLGVBQUFDLEVBQUEsR0FBQUMsRUFBQSxNQUFBQyxHQUNBLE9BQUFDLE1BQUEsR0FBQU4sV0FBQUMsSUFBQUUsRUFBQSxDQUNBQyxPQUFBQSxFQUNBRyxRQUFBLENBQ0FDLGVBQUEsaUNBQ0EsRUFDQUMsS0FBQUosRUFBQUssS0FBQUMsVUFBQU4sQ0FBQSxFQUFBTyxLQUFBQSxDQUNBLENBQUEsRUFBQUMsS0FBQSxHQUFBQyxFQUFBQyxLQUFBLENBQUEsQ0FDQSxDQUVBQyxtQkFDQSxPQUFBQyxLQUFBZixRQUFBLFNBQUEsQ0FDQSxDQUVBZ0IsaUJBQUFDLEdBQ0EsT0FBQUYsS0FBQWYsUUFBQSxtQkFBQWlCLENBQUEsQ0FDQSxDQUNBLENDbEJBLE1BQUFDLFdBQUEsOENBQ0FDLFdBQUEsdURBQ0FDLFVBQUEsY0FDQUMsZUFBQSxTQUVBQyxRQUFBQyxTQUFBQyxjQUFBLFVBQUEsRUFDQUMsY0FBQUYsU0FBQUMsY0FBQSxpQkFBQSxFQUNBRSxrQkFBQUgsU0FBQUMsY0FBQSxpQkFBQSxFQVlBLFNBQUFHLGVBQUFDLEdBQ0EsTUFBQUMsRUFBQUQsRUFBQUUsT0FBQUQsVUFDQUUsRUFBQUMsV0FBQUosRUFBQUUsTUFBQSxFQUVBRCxFQUFBSSxTQUFBYixTQUFBLElBQ0FjLGFBQUEsRUFDQUMsVUFBQUosQ0FBQSxFQUNBcEIsS0FBQSxHQUFBeUIsYUFBQUMsQ0FBQSxDQUFBLEVBQ0FDLE1BQUFDLFNBQUEsRUFFQSxDQUVBLFNBQUFDLGdCQUNBLE9BQUFwQyxNQUFBYyxVQUFBLEVBQUFQLEtBQUEsSUFDQSxHQUFBQyxFQUFBNkIsR0FDQSxPQUFBN0IsRUFBQUMsS0FBQSxFQUdBLE1BQUEsSUFBQTZCLE1BQUEsNkJBQUEsQ0FDQSxDQUFBLENBQ0EsQ0FFQSxTQUFBQyxnQkFBQUMsR0FDQUMsRUFBQUQsRUFBQUUsSUFBQUMsa0JBQUEsRUFBQUMsS0FBQSxFQUFBLEVBRUF0QixrQkFBQXVCLG1CQUFBLFlBQUFKLENBQUEsQ0FDQSxDQUVBLFNBQUFWLFVBQUFKLEdBQ0EsT0FBQTNCLE1BQUFlLFdBQUFZLENBQUEsRUFBQXBCLEtBQUEsSUFDQSxHQUFBQyxFQUFBNkIsR0FDQSxPQUFBN0IsRUFBQUMsS0FBQSxFQUdBLE1BQUEsSUFBQTZCLE1BQUEsbUNBQUEsQ0FDQSxDQUFBLENBQ0EsQ0FFQSxTQUFBTixhQUFBQyxHQUNBUSxFQUFBUixFQUFBUyxJQUFBSSxrQkFBQSxFQUFBRixLQUFBLEVBQUEsRUFFQXZCLGNBQUF3QixtQkFBQSxZQUFBSixDQUFBLENBQ0EsQ0FFQSxTQUFBWCxlQUNBLE1BQUFpQixFQUFBNUIsU0FBQTZCLGlCQUFBLFNBQUEsRUFFQUQsRUFBQUUsUUFBQSxJQUNBaEIsRUFBQWlCLE9BQUEsQ0FDQSxDQUFBLENBQ0EsQ0FFQSxTQUFBUCxtQkFBQUgsR0FDQTs7O2VBR0FBLEVBQUFiOztrREFFQWEsRUFBQVc7O0dBR0EsQ0FFQSxTQUFBTCxtQkFBQU0sR0FDQTs7MEJBRUFBLEVBQUF6Qjs7R0FHQSxDQUVBLFNBQUFDLFdBQUF5QixHQUNBLE9BQUFBLEVBQUFDLFFBQUFyQyxjQUFBLEVBQUFzQyxRQUFBNUIsRUFDQSxDQUVBLFNBQUE2QixvQkFDQSxPQUFBeEQsTUFBQWUsV0FBQSxHQUFBLEVBQUFSLEtBQUEsSUFDQSxHQUFBQyxFQUFBNkIsR0FDQSxPQUFBN0IsRUFBQUMsS0FBQSxFQUdBLE1BQUEsSUFBQTZCLE1BQUEsbUNBQUEsQ0FDQSxDQUFBLENBQ0EsQ0FFQSxTQUFBSCxVQUFBWCxHQUNBaUMsTUFBQWpDLEVBQUFrQyxPQUFBLENBQ0EsQ0FqR0F4QyxRQUFBeUMsaUJBQUEsUUFBQXBDLGNBQUEsRUFFQWEsY0FBQSxFQUNBN0IsS0FBQSxHQUFBZ0MsZ0JBQUFDLENBQUEsQ0FBQSxFQUNBTixNQUFBQyxTQUFBLEVBRUFxQixrQkFBQSxFQUNBakQsS0FBQSxHQUFBeUIsYUFBQUMsQ0FBQSxDQUFBLEVBQ0FDLE1BQUFDLFNBQUEiLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBHYWxsZXJ5QXBpIHtcclxuICBzdGF0aWMgVVJMID0gXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb21cIjtcclxuXHJcbiAgc3RhdGljIHJlcXVlc3QodXJpID0gXCJcIiwgbWV0aG9kID0gXCJHRVRcIiwgZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoKGAke0dhbGxlcnlBcGkuVVJMfSR7dXJpfWAsIHtcclxuICAgICAgbWV0aG9kLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgXCJDb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uOyBjaGFyc2V0PVVURi04XCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IGRhdGEgPyBKU09OLnN0cmluZ2lmeShkYXRhKSA6IHVuZGVmaW5lZCxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4gcmVzLmpzb24oKSk7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0QWxidW1zKCkge1xyXG4gICAgcmV0dXJuIHRoaXMucmVxdWVzdChcIi9hbGJ1bXNcIik7XHJcbiAgfVxyXG5cclxuICBzdGF0aWMgZ2V0UGhvdG9zKGFsYnVtSWQpIHtcclxuICAgIHJldHVybiB0aGlzLnJlcXVlc3QoYC9waG90b3M/YWxidW1JZD0ke2FsYnVtSWR9YCk7XHJcbiAgfVxyXG59XHJcbiIsIlwidXNlIHN0cmljdFwiO1xyXG5cclxuY29uc3QgVVJMX0FMQlVNUyA9IFwiaHR0cHM6Ly9qc29ucGxhY2Vob2xkZXIudHlwaWNvZGUuY29tL2FsYnVtc1wiO1xyXG5jb25zdCBVUkxfSU1BR0VTID0gXCJodHRwczovL2pzb25wbGFjZWhvbGRlci50eXBpY29kZS5jb20vcGhvdG9zP2FsYnVtSWQ9XCI7XHJcbmNvbnN0IEJUTl9DTEFTUyA9IFwiYnRuLWdlbmVyYWxcIjtcclxuY29uc3QgQUxCVU1fU0VMRUNUT1IgPSBcIi5hbGJ1bVwiO1xyXG5cclxuY29uc3QgZ2FsbGVyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2FsbGVyeVwiKTtcclxuY29uc3QgZ2FsbGVyeUltYWdlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZ2FsbGVyeS1pbWFnZXNcIik7XHJcbmNvbnN0IGdhbGxlcnlBbGJ1bXNMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5nYWxsZXJ5LWFsYnVtc1wiKTtcclxuXHJcbmdhbGxlcnkuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uR2FsbGVyeUNsaWNrKTtcclxuXHJcbmdldEFsYnVtc0xpc3QoKVxyXG4gIC50aGVuKChhbGJ1bSkgPT4gcmVuZGVyQWxidW1MaXN0KGFsYnVtKSlcclxuICAuY2F0Y2goc2hvd0Vycm9yKTtcclxuXHJcbnNob3dEZWZhdWx0SW1hZ2VzKClcclxuICAudGhlbigoaW1nKSA9PiByZW5kZXJJbWFnZXMoaW1nKSlcclxuICAuY2F0Y2goc2hvd0Vycm9yKTtcclxuXHJcbmZ1bmN0aW9uIG9uR2FsbGVyeUNsaWNrKGUpIHtcclxuICBjb25zdCBjbGFzc0xpc3QgPSBlLnRhcmdldC5jbGFzc0xpc3Q7XHJcbiAgY29uc3QgaWQgPSBnZXRBbGJ1bUlkKGUudGFyZ2V0KTtcclxuXHJcbiAgaWYgKGNsYXNzTGlzdC5jb250YWlucyhCVE5fQ0xBU1MpKSB7XHJcbiAgICBkZWxldGVJbWFnZXMoKTtcclxuICAgIGdldEltYWdlcyhpZClcclxuICAgICAgLnRoZW4oKGltZykgPT4gcmVuZGVySW1hZ2VzKGltZykpXHJcbiAgICAgIC5jYXRjaChzaG93RXJyb3IpO1xyXG4gIH1cclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0QWxidW1zTGlzdCgpIHtcclxuICByZXR1cm4gZmV0Y2goVVJMX0FMQlVNUykudGhlbigocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgcmV0cml2ZSBhbGJ1bXMgbGlzdFwiKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVuZGVyQWxidW1MaXN0KGFsYnVtKSB7XHJcbiAgY29uc3QgaHRtbCA9IGFsYnVtLm1hcChnZW5lcmF0ZUFsYnVtc0hUTUwpLmpvaW4oXCJcIik7XHJcblxyXG4gIGdhbGxlcnlBbGJ1bXNMaXN0Lmluc2VydEFkamFjZW50SFRNTChcImJlZm9yZWVuZFwiLCBodG1sKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0SW1hZ2VzKGlkKSB7XHJcbiAgcmV0dXJuIGZldGNoKFVSTF9JTUFHRVMgKyBpZCkudGhlbigocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgcmV0cml2ZSBpbWFnZXMgZnJvbSBhbGJ1bVwiKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gcmVuZGVySW1hZ2VzKGltZykge1xyXG4gIGNvbnN0IGh0bWwgPSBpbWcubWFwKGdlbmVyYXRlSW1hZ2VzSFRNTCkuam9pbihcIlwiKTtcclxuXHJcbiAgZ2FsbGVyeUltYWdlcy5pbnNlcnRBZGphY2VudEhUTUwoXCJiZWZvcmVlbmRcIiwgaHRtbCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRlbGV0ZUltYWdlcygpIHtcclxuICBjb25zdCBpbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLmltYWdlc1wiKTtcclxuXHJcbiAgaW1hZ2VzLmZvckVhY2goKGltZykgPT4ge1xyXG4gICAgaW1nLnJlbW92ZSgpO1xyXG4gIH0pO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZW5lcmF0ZUFsYnVtc0hUTUwoYWxidW0pIHtcclxuICByZXR1cm4gYFxyXG4gICAgPGxpIFxyXG4gICAgY2xhc3M9J2FsYnVtJ1xyXG4gICAgZGF0YS1pZD1cIiR7YWxidW0uaWR9XCJcclxuICAgID5cclxuICAgICAgPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSdidG4tZ2VuZXJhbCc+JHthbGJ1bS50aXRsZX08L2J1dHRvbj5cclxuICAgIDwvbGk+XHJcbiAgYDtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2VuZXJhdGVJbWFnZXNIVE1MKGltYWdlKSB7XHJcbiAgcmV0dXJuIGBcclxuICAgIDxkaXYgY2xhc3M9XCJpbWFnZXNcIj5cclxuICAgIDxwIGNsYXNzPVwiaW1hZ2UtaWRcIj4ke2ltYWdlLmlkfTwvcD5cclxuICAgIDwvZGl2PlxyXG4gIGA7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGdldEFsYnVtSWQoZWwpIHtcclxuICByZXR1cm4gZWwuY2xvc2VzdChBTEJVTV9TRUxFQ1RPUikuZGF0YXNldC5pZDtcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0RlZmF1bHRJbWFnZXMoKSB7XHJcbiAgcmV0dXJuIGZldGNoKFVSTF9JTUFHRVMgKyBcIjFcIikudGhlbigocmVzKSA9PiB7XHJcbiAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbiBub3QgcmV0cml2ZSBpbWFnZXMgZnJvbSBhbGJ1bVwiKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0Vycm9yKGUpIHtcclxuICBhbGVydChlLm1lc3NhZ2UpO1xyXG59XHJcbiJdfQ==